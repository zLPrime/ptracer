+ draw a buffer on a canvas
+ raytrace a sphere with just constant color
+ bounce off the ray to the light source
+ optimize vector division: return (1/t) * v;
+ fix drawing a sphere twice (before and behind the camera)
+ organize code
+ let camera just span rays, and scene do the rest
+ fix coloured shadow
+ introduce multisampling
+ print FPS
- optimize using random generator
+ add triangles
+ add support for a 3d scene format
- add light sources
- make UI asynchronous to rendering
- tome mapping https://youtu.be/8liHiCNM4iU?t=550
- print camera coordinates (for later use)
+ make meshes part of scene, not triangles (remove get_triangles?)
+ apply bounding box optimization
- give meshes coordinates; transform local coords to global and back
- assign material to mesh, not triangle